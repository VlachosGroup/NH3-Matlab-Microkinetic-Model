function [ res ] = ammonia( t,s,ds )
% Ammonia Synthesis Microkinetic Model
%
% Input:
%   s   Species concentrations
%   T   Temperature (K)
%
% Output:
%   ds  Reaction rate for each species
%
% Species list:
%   [s(1),ds(1)]    H2     N2*
%   [s(2),ds(2)]    N2     N*
%   [s(3),ds(3)]    H*     H*
%   [s(4),ds(4)]    N*     NH3*
%   [s(5),ds(5)]    NH*    NH2*
%   [s(6),ds(6)]    NH2*   NH*
%   [s(7),ds(7)]    NH3*   N2
%   [s(8),ds(8)]    NH3    H2
%   [s(9),ds(9)]     *     NH3
%   [s(10),ds(10)]   * (Vacant site)
%
global kb;
global kf;
Stoic_surf = [ 1  0  0  0  0  0  0  0  0 -1;...
              -1  2  0  0  0  0  0  0  0 -1;...
               0  0  2  0  0  0  0  0  0 -2;...
               0  0  1 -1  1  0  0  0  0 -1;...
               0  0  1  0 -1  1  0  0  0 -1;...
               0  1  1  0  0 -1  0  0  0 -1;...
               0  0  0  1  0  0  0  0  0 -1];
Stoic_gas =  [ 0  0  0  0  0  0 -1  0  0  0;...
               0  0  0  0  0  0  0  0  0  0;...
               0  0  0  0  0  0  0 -1  0  0;...
               0  0  0  0  0  0  0  0  0  0;...
               0  0  0  0  0  0  0  0  0  0;...
               0  0  0  0  0  0  0  0  0  0;...
               0  0  0  0  0  0  0  0 -1  0];
Stoic = Stoic_surf + Stoic_gas;
% Kinetic rate constants
global T P;
[kf,kb]=amm_kinetics(T,P,s,Stoic,Stoic_surf,Stoic_gas);  % Obtain kinetics rate constants
%
% Reaction network
%
res    = zeros(10,1);
res(1) =-ds(1) + kf(1)*s(7)*s(10)         - kb(1)*s(1) + ...
        kb(2)*s(2)^2             - kf(2)*s(1)*s(10);             % dN2*/dt
res(2) = -ds(2) + 2*kf(2)*s(1)*s(10)       - 2*kb(2)*s(2)^2 + ...
        kf(6)*s(6)*s(10)         - kb(6)*s(2)*s(3);              % dN*/dt
res(3) = -ds(3) + 2*kf(3)*s(8)*s(10)^2     - 2*kb(3)*s(3)^2 +...
        kf(4)*s(4)*s(10)         - kb(4)*s(5)*s(3) +...
        kf(5)*s(5)*s(10)         - kb(5)*s(6)*s(3) +...
        kf(6)*s(6)*s(10)         - kb(6)*s(2)*s(3);              % dH*/dt
res(4) = -ds(4) + kb(4)*s(5)*s(3)          - kf(4)*s(4)*s(10) +...
        kf(7)*s(9)*s(10)         - kb(7)*s(4);                   % dNH3*/dt
res(5) = -ds(5) + kf(4)*s(4)*s(10)         - kb(4)*s(5)*s(3) +...
        kb(5)*s(6)*s(3)          - kf(5)*s(5)*s(10);             % dNH2*/dt
res(6) = -ds(6) + kf(5)*s(5)*s(10)         - kb(5)*s(6)*s(3) +...
        kb(6)*s(2)*s(3)          - kf(6)*s(6)*s(10);             % dNH*/dt
res(7) = -ds(7) + kb(1)*s(1)               - kf(1)*s(7)*s(10);             % dN2/dt
res(8) = -ds(8) + kb(3)*s(3)^2             - kf(3)*s(8)*s(10)^2;           % dH2/dt
res(9) = -ds(9) + kb(7)*s(4)               - kf(7)*s(9)*s(10);             % dNH3/dt
res(10)= -ds(10) + kb(1)*s(1)               - kf(1)*s(7)*s(10) +...
        kb(2)*s(2)^2             - kf(2)*s(1)*s(10) +...
        2*kb(3)*s(3)^2           - 2*kf(3)*s(8)*s(10)^2 +...
        kb(4)*s(5)*s(3)          - kf(4)*s(4)*s(10) +...
        kb(5)*s(6)*s(3)          - kf(5)*s(5)*s(10) +...
        kb(6)*s(2)*s(3)          - kf(6)*s(6)*s(10) +...
        kb(7)*s(4)               - kf(7)*s(9)*s(10);             % d*/dt
end

